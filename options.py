import getopt
import sys
import requests
import colorama
from colorama import Fore, Style
import time

VERSION = "1.0"

class File():
    def __init__(self, fileName, mode):
        self.fileName = fileName
        self.mode = mode

    def __enter__(self):
        self.f = open(self.fileName, self.mode)
        return self.f

    def __exit__(self, exc_type, exc_val, exc_tb):
        self.f.close()

def usage():
    print("Options Detect Tool {} ( github.com/sibertime )".format(VERSION))
    print("Usage: " + sys.argv[0] + " [OPTIONS]")
    print("   --url\texample.com")
    print("   --file\tdomains.txt")
    print("   --version\tList version release")
    print("   --help\tThis help menu\n")
    print("Examples:")
    print("   python3 " + sys.argv[0] + " --url http://example.com/folder/")
    print("   python3 " + sys.argv[0] + " --file file.txt")
    sys.exit(1)

def options(url):
    try:
        r = requests.options(url)
        result = r.headers
        if 'PUT' in result['Allow']:
            time.sleep(1)
            status_code = requests.put(r.url + "test.txt", data="deneme").status_code
            if status_code == 200 or status_code == 201:
                print(f"{Fore.GREEN}+{Style.RESET_ALL} " + r.url + " {" + result[
                    'Allow'] + "} " + "{" + r.url + "test.txt" + "}")
            else:
                print(f"{Fore.GREEN}+{Style.RESET_ALL} " + r.url + " {" + result[
                    'Allow'] + "} " + "{" + f"{Fore.RED}Dosya yüklenemedi{Style.RESET_ALL}" + "}")
        else:
            print(f"{Fore.GREEN}+{Style.RESET_ALL} " + r.url + " {" + result['Allow'] + "}")
    except (requests.exceptions.SSLError):
        print(f"{Fore.RED}-{Style.RESET_ALL} " + url + " {SSLError}")
        time.sleep(0.5)
    except (requests.exceptions.ConnectionError):
        print(f"{Fore.RED}-{Style.RESET_ALL} " + url + " {Bağlantı reddedildi}")
        time.sleep(5)
    except (KeyError):
        print(f"{Fore.RED}-{Style.RESET_ALL} " + url + " {}")

def optionsFile(filePath):
    try:
        with File(filePath, 'r') as f:
            lines = f.readlines()
        for line in lines:
            options(line.strip())
    except (KeyboardInterrupt):
        print('Error !')
    finally:
        f.close()

if __name__ == "__main__":
    try:
        opts, args = getopt.getopt(sys.argv[1:], "u:f:hv", ["url=", "file=", "help", "version"])
    except(getopt.GetoptError)  as err:
        print(err)
        sys.exit(-1)

    for o, a in opts:
        if o in ("-u", "--url"):
            options(a)
        elif o in ("-f", "--file"):
            optionsFile(a)
        elif o in ("-h", "--help"):
            usage()
            sys.exit()
        elif o in ("-v", "--version"):
            print(VERSION)
            sys.exit(0)
        else:
            assert False, "unhandled option"
            sys.exit(-1)

    argc = len(sys.argv)
    if argc != 3:
        usage()
